{
  "_id": "ZVb67Wo9iaLlTnrF",
  "name": "Downtime Crafting",
  "type": "script",
  "sort": 100001,
  "flags": {
    "macro-marker": {
      "activeData": {
        "icon": "icons/svg/dice-target.svg",
        "tooltip": "New Macro",
        "colour": "#ff0000",
        "trigger": ""
      }
    },
    "exportSource": {
      "world": "intotheabyss",
      "system": "pf2e",
      "coreVersion": "0.7.9",
      "systemVersion": "1.11.3.3582"
    }
  },
  "scope": "global",
  "command": "(async () => {\nlet toChat = (content, rollString) => {\n    let chatData = {\n        user: game.user.id,\n        content,\n        speaker: ChatMessage.getSpeaker(),\n    }\n    ChatMessage.create(chatData, {})\n    if (rollString) {\n        let roll = new Roll(rollString).roll();\n        chatData = {\n            ...chatData,\n            flavor: \"Crafting Results\",\n            type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n            roll\n          }\n        ChatMessage.create(chatData, {})\n    }\n    \n}\n\n\nconst handleCrits = (roll) => roll === 1 ? -10 : (roll === 20 ? 10 : 0);\n\nlet rollCrafting = (args) => {\n    let {itmLevel, cra, charLevel, itmType, itmValue, charName, devinSight} = args;\n\n    var roll = new Roll(`d20`).roll().total;\n    var roll2 = new Roll(`d20`).roll().total;\n\n    if (devinSight){\n      console.log(\"Devin's Sight (Before) | Used roll :\" + roll + \", Annex roll  :\" +roll2);\n\n      if (roll2 > roll) {\n        roll = roll2;\n     }\n\n       console.log(\"Devin's Sight (After) | Used roll :\" + roll + \", Annex roll  :\" +roll2);\n    }  \n\n    var crit = handleCrits(roll);\n\n\n    var DC = 0, taskLevel = charLevel, gp = 0;\n\n    switch (itmLevel) {\n      case 1:\n        DC = 15;\n        break;\n      case 2:\n        DC = 16;\n        break;\n      case 3:\n        DC = 18;\n        break;\n      case 4:\n        DC = 19;\n        break;\n      case 5:\n        DC =20;\n        break;\n      case 6:\n        DC = 22;\n        break;\n      case 7:\n        DC = 23;\n        break;\n      case 8:\n        DC = 24;\n        break;\n      case 9:\n        DC = 26;\n        break;\n      case 10:\n        DC= 27;\n        break;\n      case 11:\n        DC = 28;\n        break;\n      case 12:\n        DC = 30;\n        break;\n      case 13:\n        DC = 31;\n        break;\n      case 14:\n        DC = 32;\n        break;\n      case 15:\n        DC = 34;\n        break;\n      case 16:\n        DC = 35;\n        break;\n      case 17:\n        DC = 36;\n        break;\n      case 18:\n        DC = 38;\n        break;\n      case 19:\n        DC = 39;\n        break;\n      case 20:\n        DC = 40;\n        break;\n      default:\n        DC = 14;\n        break;\n\n    }\n\n\n    if (roll + crit + cra.value >= DC+10) taskLevel++;\n\n    if (cra.rank === 4) {\n      switch (taskLevel) {\n        case 1:\n          gp = 0.2;\n          break;\n        case 2:\n          gp = 0.3;\n          break;\n        case 3:\n          gp = 0.5;\n          break;\n        case 4:\n          gp = 0.8;\n          break;\n        case 5:\n          gp = 1;\n          break;\n        case 6:\n          gp = 2;\n          break;\n        case 7:\n          gp = 2.5;\n          break;\n        case 8:\n          gp = 3;\n          break;\n        case 9:\n          gp = 4;\n          break;\n        case 10:\n          gp= 6;\n          break;\n        case 11:\n          gp = 8;\n          break;\n        case 12:\n          gp = 10;\n          break;\n        case 13:\n          gp = 15;\n          break;\n        case 14:\n          gp = 20;\n          break;\n        case 15:\n          gp = 28;\n          break;\n        case 16:\n          gp = 40;\n          break;\n        case 17:\n          gp = 55;\n          break;\n        case 18:\n          gp = 90;\n          break;\n        case 19:\n          gp = 130;\n          break;\n        case 20:\n          gp = 200;\n          break;\n        case 21:\n          gp = 300;\n          break;\n        default:\n          gp = 0.05;\n          break;\n      }\n    } else if (cra.rank === 3) {\n        switch (taskLevel) {\n          case 1:\n            gp = 0.2;\n            break;\n          case 2:\n            gp = 0.3;\n            break;\n          case 3:\n            gp = 0.5;\n            break;\n          case 4:\n            gp = 0.8;\n            break;\n          case 5:\n            gp = 1;\n            break;\n          case 6:\n            gp = 2;\n            break;\n          case 7:\n            gp = 2.5;\n            break;\n          case 8:\n            gp = 3;\n            break;\n          case 9:\n            gp = 4;\n            break;\n          case 10:\n            gp= 6;\n            break;\n          case 11:\n            gp = 8;\n            break;\n          case 12:\n            gp = 10;\n            break;\n          case 13:\n            gp = 15;\n            break;\n          case 14:\n            gp = 20;\n            break;\n          case 15:\n            gp = 28;\n            break;\n          case 16:\n            gp = 36;\n            break;\n          case 17:\n            gp = 45;\n            break;\n          case 18:\n            gp = 70;\n            break;\n          case 19:\n            gp = 100;\n            break;\n          case 20:\n            gp = 150;\n            break;\n          case 21:\n            gp = 175;\n            break;\n          default:\n            gp = 0.05;\n            break;\n        }\n\n    } else if (cra.rank === 2) {\n        switch (taskLevel) {\n          case 1:\n            gp = 0.2;\n            break;\n          case 2:\n            gp = 0.3;\n            break;\n          case 3:\n            gp = 0.5;\n            break;\n          case 4:\n            gp = 0.8;\n            break;\n          case 5:\n            gp = 1;\n            break;\n          case 6:\n            gp = 2;\n            break;\n          case 7:\n            gp = 2.5;\n            break;\n          case 8:\n            gp = 3;\n            break;\n          case 9:\n            gp = 4;\n            break;\n          case 10:\n            gp= 5;\n            break;\n          case 11:\n            gp = 6;\n            break;\n          case 12:\n            gp = 8;\n            break;\n          case 13:\n            gp = 10;\n            break;\n          case 14:\n            gp = 15;\n            break;\n          case 15:\n            gp = 20;\n            break;\n          case 16:\n            gp = 25;\n            break;\n          case 17:\n            gp = 30;\n            break;\n          case 18:\n            gp = 45;\n            break;\n          case 19:\n            gp = 60;\n            break;\n          case 20:\n            gp = 75;\n            break;\n          case 21:\n            gp = 90;\n            break;\n          default:\n            gp = 0.05;\n            break;\n        }\n\n    } else if (cra.rank === 1){\n         switch (taskLevel) {\n          case 1:\n            gp = 0.2;\n            break;\n          case 2:\n            gp = 0.3;\n            break;\n          case 3:\n            gp = 0.5;\n            break;\n          case 4:\n            gp = 0.7;\n            break;\n          case 5:\n            gp = 0.9;\n            break;\n          case 6:\n            gp = 1.5;\n            break;\n          case 7:\n            gp = 2;\n            break;\n          case 8:\n            gp = 2.5;\n            break;\n          case 9:\n            gp = 3;\n            break;\n          case 10:\n            gp= 4;\n            break;\n          case 11:\n            gp = 5;\n            break;\n          case 12:\n            gp = 6;\n            break;\n          case 13:\n            gp = 7;\n            break;\n          case 14:\n            gp = 8;\n            break;\n          case 15:\n            gp = 10;\n            break;\n          case 16:\n            gp = 13;\n            break;\n          case 17:\n            gp = 15;\n            break;\n          case 18:\n            gp = 20;\n            break;\n          case 19:\n            gp = 30;\n            break;\n          case 20:\n            gp = 40;\n            break;\n          case 21:\n            gp = 50;\n            break;\n          default:\n            gp = 0.05;\n            break;\n        }\n    }\n\n    if (itmType === \"rare\") DC += 5;\n\n    let message = `Starts crafting a ${itmType} item of level ${itmLevel}, supplying ${itmValue/2}gp... [[${roll}+${cra.value}]] ! </br> </br>`;\n\n    if (roll + crit + cra.value >= DC+10) {\n        toChat(`${message} Critical success ! Each additional day spent Crafting reduces the materials needed to complete the item by an amount of ${gp}gp. </br> ${charName} can also pay ${itmValue/2}gp to finish the crafting immediately or spend ${Math.ceil((itmValue/2)/gp)} additionnal days.`);\n    } else if (roll+crit + cra.value >= DC) {\n        toChat(`${message} It's a success. Each additional day spent Crafting reduces the materials needed to complete the item by an amount of ${gp}gp. </br> ${charName} can also pay ${itmValue/2}gp to finish the crafting immediately or spend ${Math.ceil((itmValue/2)/gp)} additionnal days.`,);\n    } else if (roll + crit + cra.value < DC-10) {\n        toChat(`${message} It's a critical failure... ${charName} fails to complete the item. ${charName} loses raw materials worth ${(itmValue/2)*0.1}gp but can salvage the remaining ${(itmValue/2)*0.9}gp. ${charName} must start over if he/she wants to try again.`);\n    } else if (roll+crit + cra.value < DC) {\n        toChat(`${message} It's a failure. ${charName} can salvage raw materials worth ${itmValue/2}gp. ${charName} must start over if he/she wants to try again.`);\n    }\n    \n}\n\nlet applyChanges = false;\nnew Dialog({\n  title: `Crafting`,\n  content: `\n    <div>Select an item you want to craft. Don't forget you need to possess the according formula in order to craft this item.<div>\n    <hr/>\n    <form>\n      <div class=\"form-group\">\n        <label>Item level :</label>\n        <input id=\"lvl-item\" name=\"lvl-item\" type=\"number\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>Item value (in GP) :</label>\n        <input id=\"value-item\" name=\"value-item\" type=\"number\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>Rare item ?</label>\n        <input id=\"rare-item\" name=\"rare-item\" type=\"checkbox\" value=\"rare\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>Devin's Sight ?</label>\n        <input id=\"fortune\" name=\"fortune\" type=\"checkbox\" value=\"fortune\"/>\n      </div>\n    </form>\n    `,\n  buttons: {\n    yes: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: `Start crafting !`,\n      callback: () => applyChanges = true\n    },\n    no: {\n      icon: \"<i class='fas fa-times'></i>\",\n      label: `Cancel`\n    },\n  },\n  default: \"yes\",\n  close: html => {\n    if (applyChanges) {\n      for ( let token of canvas.tokens.controlled ) {\n        var {cra} = actor.data.data.skills;\n        var charLevel = actor.data.data.details.level.value;\n        var charName = actor.data.name;\n        let itmType = html.find('[name=\"rare-item\"]')[0].checked ? \"rare\" : \"common\" ;\n        let devinSight = html.find('[name=\"fortune\"]')[0].checked;\n        let itmLevel = parseInt(html.find('[name=\"lvl-item\"]')[0].value) || 0;\n        let itmValue = parseInt(html.find('[name=\"value-item\"]')[0].value) || 0;\n\n        console.log(itmType);\n\n        if (itmLevel <= charLevel) {\n\n\n          if (itmLevel >= 0 && itmLevel <= 20) {\n            if (cra.rank >= 4) {\n                    return rollCrafting({itmLevel, cra, charLevel, itmType, itmValue, charName, devinSight});\n            } else if (cra.rank >= 3) {\n                if (itmLevel < 16) {\n                    return rollCrafting({itmLevel, cra, charLevel, itmType, itmValue, charName, devinSight});\n              } else {\n                ui.notifications.warn(\"Don't possess the sufficient proficiency to craft this !\");\n              }\n\n            } else if (cra.rank >= 1) {\n              if (itmLevel < 9) {\n                    return rollCrafting({itmLevel, cra, charLevel, itmType, itmValue, charName, devinSight});\n              } else {\n                ui.notifications.warn(\"Don't possess the sufficient proficiency to craft this !\");\n              }\n            } else {\n              ui.notifications.warn(\"Isn't trained in Crafting, and can't craft stuff !\");\n            }\n          } else ui.notifications.warn(\"Invalid item level !\");\n        } else ui.notifications.warn(\"Item level above character level !\");\n        return;\n      }\n    }\n  }\n}).render(true);\n })();",
  "author": "W8q1Lt1rpRQHzfmu",
  "img": "icons/svg/clockwork.svg",
  "actorIds": []
}