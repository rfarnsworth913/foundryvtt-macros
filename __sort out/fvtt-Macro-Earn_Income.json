{
  "_id": "yCKCpZzvwXgGdcn8",
  "name": "Earn Income",
  "type": "script",
  "sort": 100001,
  "flags": {
    "exportSource": {
      "world": "intotheabyss",
      "system": "pf2e",
      "coreVersion": "0.7.9",
      "systemVersion": "1.11.3.3582"
    }
  },
  "scope": "global",
  "command": "(async () => {\nlet toChat = (content, rollString) => {\n    let chatData = {\n        user: game.user.id,\n        content,\n        speaker: ChatMessage.getSpeaker(),\n    }\n    ChatMessage.create(chatData, {})\n    if (rollString) {\n        let roll = new Roll(rollString).roll();\n        chatData = {\n            ...chatData,\n            flavor: \"Earn Income Results\",\n            type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n            roll\n          }\n        ChatMessage.create(chatData, {})\n    }\n}\n\nconst handleCrits = (roll) => roll === 1 ? -10 : (roll === 20 ? 10 : 0);\n\nlet getDC = (level) => { // Création de DC en fonction du niveau\n  let arrayDC = [14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 46, 48, 50]\n    var DC = arrayDC[level];\n  return DC;\n}\n\nlet valueIncome = (skillRank, taskLevel) => {\n  let arrayIncome = [\n    [0.01,0.02,0.04,0.08,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1,1.5,2,2.5,3,4,6,8,8],\n    [0.05,0.2,0.3,0.5,0.7,0.9,1.5,2,2.5,3,4,5,6,7,8,10,13,15,20,30,40,50],\n    [0.05,0.2,0.3,0.5,0.8,1,2,2.5,3,4,5,6,8,10,15,20,25,30,45,60,75,90],\n    [0.05,0.2,0.3,0.5,0.8,1,2,2.5,3,4,6,8,10,15,20,28,36,45,70,100,150,175],\n    [0.05,0.2,0.3,0.5,0.8,1,2,2.5,3,4,6,8,10,15,20,28,40,55,90,130,200,300],\n  ]\n  var GP = arrayIncome[skillRank][taskLevel];\n\n  return GP;\n}\n\n\nlet earnIncome = (taskLevel, charName, skillRank, skillMod, days) => {\n    var DC = getDC(taskLevel), gp = 0;\n    var critFailure = false;\n\n    var roll = new Roll(`d20`).roll().total;\n    var crit = handleCrits(roll);\n\n    let message = `Starts a task of level ${taskLevel} during ${days} day(s)... [[${roll}+${skillMod}]] ! </br> </br>`;\n\n    // Modify taskLevel based on success range\n    if (roll + crit + skillMod >= DC+10) {\n        taskLevel++;\n    } else if (roll+crit + skillMod >= DC) {\n        \n    } else if (roll + crit + skillMod < DC-10) {\n        critFailure = true;\n    } else if (roll + crit + skillMod < DC) {\n        taskLevel = 0;\n    }\n\n    // Calculate the amount of GP based on proficiency and the new \"taskLevel\"\n    if (!critFailure) {\n      gp = valueIncome(skillRank, taskLevel);\n      \n      if (roll + crit + skillMod >= DC+10) {\n          toChat(`${message} It's a critical success ! ${charName} manages to earn ${gp}gp per day, for a final salary of ${(gp*days).toFixed(2)}gp!`);\n      } else if (roll+crit + skillMod >= DC) {\n          toChat(`${message} It's a success ! ${charName} manages to earn ${gp}gp per day, for a final salary of ${(gp*days).toFixed(2)}gp!`);\n      } else if (roll+crit + skillMod < DC) {\n          toChat(`${message} It's failure... ${charName} only manages to earn ${gp}gp per day, for a final salary of ${(gp*days).toFixed(2)}gp...`);\n      }\n\n    } else {\n      toChat(`${message} It's a critical failure! ${charName} earns nothing for his/her work and is fired immediately. ${charName} can’t continue at the task. \n        ${charName}'s reputation suffers, potentially making it difficult for him/her to find rewarding jobs in that community in the future...`);\n    }\n}\n\n\nlet applyChanges = false;\nif (actor) {\n  if(actor.data.type === 'character') {\n    new Dialog({\n      title: `Earn Income`,\n      content: `\n        <div>Select a skill and a number of days in order to calculate your income. Remember you need to be at least Trained in a skill to Earn Income!\n        </br></br> If Custom Task Level stays empty, the task level will be automatically calculated using your character level.<div>\n        <hr/>\n        <form>\n          <div class=\"form-group\">\n            <label>Skill :</label>\n            <select name=\"skill-used\" id=\"skill-used\">\n              <option value=\"crafting\">Crafting</option>\n              <option value=\"performance\">Performance</option>\n              <option value=\"lore-trained\">Lore (T)</option>\n              <option value=\"lore-expert\">Lore (E)</option>\n              <option value=\"lore-master\">Lore (M)</option>\n              <option value=\"lore-legendary\">Lore (L)</option>\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label>Number of days :</label>\n            <input id=\"days\" name=\"days\" type=\"number\"/>\n          </div>\n          <div class=\"form-group\">\n            <label>Custom Task level :</label>\n            <input id=\"tsk-lvl\" name=\"tsk-lvl\" type=\"number\"/>\n          </div>\n          <div class=\"form-group\">\n            <label>Pathfinder Society ?</label>\n            <input id=\"pfs\" name=\"pfs\" type=\"checkbox\" value=\"pfs\"/>\n          </div>\n          <div class=\"form-group\">\n            <label>PFS Experienced Smuggler ?</label>\n            <input id=\"pfs-smug\" name=\"pfs-smug\" type=\"checkbox\" value=\"pfs-smug\"/>\n          </div>\n        </form>\n        `,\n      buttons: {\n        yes: {\n          icon: \"<i class='fas fa-check'></i>\",\n          label: `Earn Income`,\n          callback: () => applyChanges = true\n        },\n        no: {\n          icon: \"<i class='fas fa-times'></i>\",\n          label: `Cancel`\n        },\n      },\n      default: \"yes\",\n      close: html => {\n        if (applyChanges) {\n          for ( let token of canvas.tokens.controlled ) {\n            var {cra} = actor.data.data.skills;\n            var {prf} = actor.data.data.skills;\n            var charLevel = actor.data.data.details.level.value;\n            var charName = actor.data.name;\n            var skillRank = 0, skillMod = 0, taskLevel = 0;\n            let skillUsed = html.find('[name=\"skill-used\"]')[0].value || \"none\";\n            let days = parseInt(html.find('[name=\"days\"]')[0].value) || 0;\n            let pfs = html.find('[name=\"pfs\"]')[0].checked;\n            let pfsSmuggler = html.find('[name=\"pfs-smug\"]')[0].checked;;\n            let customTaskLevel = parseInt(html.find('[name=\"tsk-lvl\"]')[0].value)\n            \n            if (customTaskLevel) {\n              taskLevel = customTaskLevel;\n            } else {\n              if (pfsSmuggler) {\n                taskLevel = charLevel - 1;\n              } else if (pfs) {\n                taskLevel = Math.max(charLevel - 2, 0);\n              } else taskLevel = charLevel;\n            }\n\n            switch (skillUsed) {\n              case \"crafting\":\n                skillRank = cra.rank;\n                skillMod = cra.totalModifier;\n                break;\n              case \"performance\":\n                skillRank = prf.rank;\n                skillMod = prf.totalModifier;\n                break;\n              case \"lore-trained\":\n                skillRank = 1;\n                skillMod = actor.data.data.abilities.int.mod + charLevel + 2;\n                break;\n              case \"lore-expert\":\n                skillRank = 2;\n                skillMod = actor.data.data.abilities.int.mod + charLevel + 4;\n                break;\n              case \"lore-master\":\n                skillRank = 3;\n                skillMod = actor.data.data.abilities.int.mod + charLevel + 6;\n                break;\n              case \"lore-legendary\":\n                skillRank = 4;\n                skillMod = actor.data.data.abilities.int.mod + charLevel + 8;\n                break;\n              default:\n                skillRank = 0;\n                skillMod = 0;\n                break;Z\n            }\n\n            if (days) {\n              if (skillRank) {\n              earnIncome(taskLevel, charName, skillRank, skillMod, days);\n              } else ui.notifications.warn(\"This character isn't trained in this skill !\");\n            } else ui.notifications.warn(\"You must work at least a day !\");\n\n\n            return;\n          }\n        }\n      }\n    }).render(true);\n  } else if (actor.data.type !== 'character') ui.notifications.warn(\"You must select a playable character !\");\n} else ;\n })()",
  "author": "y9iYbvragH4tTGlL",
  "img": "systems/pf2e/icons/equipment/treasure/currency/gold-pieces.jpg",
  "actorIds": []
}