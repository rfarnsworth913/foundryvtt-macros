{
  "name": "Craft Something",
  "type": "script",
  "sort": 100001,
  "flags": {
    "macro-marker": {
      "activeData": {
        "icon": "icons/svg/dice-target.svg",
        "tooltip": "New Macro",
        "colour": "#ff0000",
        "trigger": ""
      }
    },
    "furnace": {
      "runAsGM": false
    },
    "exportSource": {
      "world": "intotheabyss",
      "system": "pf2e",
      "coreVersion": "0.7.9",
      "systemVersion": "1.11.3.3582"
    }
  },
  "scope": "global",
  "command": "let toChat = (content) => {\n  let chatData = {\n    user: game.user.id,\n    content,\n    speaker: ChatMessage.getSpeaker(),\n  }\n  ChatMessage.create(chatData, {})\n}\n\nconst handleCrits = (roll) => roll === 1 ? -10 : (roll === 20 ? 10 : 0);\n\nlet getDC = (level) => { // CrÃ©ation de DC en fonction du niveau\n  let arrayDC = [14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 46, 48, 50]\n  var DC = arrayDC[level];\n  return DC;\n}\n\nlet valueIncome = (skillRank, taskLevel) => {\n  let arrayIncome = [\n    [0.01, 0.02, 0.04, 0.08, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.5, 2, 2.5, 3, 4, 6, 8, 8],\n    [0.05, 0.2, 0.3, 0.5, 0.7, 0.9, 1.5, 2, 2.5, 3, 4, 5, 6, 7, 8, 10, 13, 15, 20, 30, 40, 50],\n    [0.05, 0.2, 0.3, 0.5, 0.8, 1, 2, 2.5, 3, 4, 5, 6, 8, 10, 15, 20, 25, 30, 45, 60, 75, 90],\n    [0.05, 0.2, 0.3, 0.5, 0.8, 1, 2, 2.5, 3, 4, 6, 8, 10, 15, 20, 28, 36, 45, 70, 100, 150, 175],\n    [0.05, 0.2, 0.3, 0.5, 0.8, 1, 2, 2.5, 3, 4, 6, 8, 10, 15, 20, 28, 40, 55, 90, 130, 200, 300],\n  ]\n  var GP = arrayIncome[skillRank][taskLevel];\n\n  return GP;\n}\n\nlet rollCrafting = (args) => {\n  let {\n    itmLevel,\n    cra,\n    charLevel,\n    itmType,\n    itmValue,\n    charName,\n    devinSight\n  } = args;\n\n  var roll = new Roll(`d20`).roll().total;\n  var roll2 = new Roll(`d20`).roll().total;\n\n  if (devinSight) {\n    console.log(`BM Macros | Devin's Sight (Before) | Roll: ${roll}, DS: ${roll2}`);\n\n    if (roll2 > roll) {\n      roll = roll2;\n    }\n\n    console.log(`BM Macros | Devin's Sight (After) | Roll: ${roll}, DS: ${roll2}`);\n  }\n\n  var crit = handleCrits(roll);\n\n\n  var DC = getDC(itmLevel);\n\n  if (roll + crit + cra.value >= DC + 10) charLevel++;\n\n  var gp = valueIncome(cra.rank, charLevel);\n\n  if (itmType === \"rare\") DC += 5;\n\n  let message = `${charName} starts crafting a ${itmType} item of level ${itmLevel} by using the equivalent of ${itmValue/2}gp... [[${roll}+${cra.value}]] ! </br> </br>`;\n\n  if (roll + crit + cra.value >= DC + 10) {\n    toChat(`${message} It's a critical success! Each additional day spent Crafting reduces the materials needed to complete the item by an amount of ${gp}gp. </br> ${charName} can pay the equivalent of ${itmValue/2}gp \n    to finish the crafting instantly of spend ${Math.ceil((itmValue/2)/gp)} additionnal days to complete it for free.`);\n  } else if (roll + crit + cra.value >= DC) {\n    toChat(`${message} It's a success. Each additional day spent Crafting reduces the materials needed to complete the item by an amount of ${gp}gp. </br> ${charName} can pay the equivalent of ${itmValue/2}gp \n    to finish the crafting instantly of spend ${Math.ceil((itmValue/2)/gp)} additionnal days to complete it for free.`, );\n  } else if (roll + crit + cra.value < DC - 10) {\n    toChat(`${message} It's a critical failure. ${charName} fails to complete the item. ${charName} ruins ${((itmValue/2)*0.1).toFixed(2)}gp of the raw materials supplied, \n    but can salvage the remaining ${((itmValue/2)*0.9).toFixed(2)}gp. If ${charName} wants to try again, he/she must start over.`);\n  } else if (roll + crit + cra.value < DC) {\n    toChat(`${message} It's a failure. ${charName} can salvage the equivalent in raw materials of ${itmValue/2}gp. If ${charName} wants to try again, he/she must start over..`);\n  }\n\n}\n\nlet applyChanges = false;\nif (actor) {\n  if (actor.data.type === 'character') {\n    new Dialog({\n      title: `Craft Something`,\n      content: `\n    <div>Select the level of the item you want to craft. Don't forget you must possess the formula for it.<div>\n    <hr/>\n    <form>\n      <div class=\"form-group\">\n        <label>Item level:</label>\n        <input id=\"lvl-item\" name=\"lvl-item\" type=\"number\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>Item value (in GP):</label>\n        <input id=\"value-item\" name=\"value-item\" type=\"number\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>Rare item?</label>\n        <input id=\"rare-item\" name=\"rare-item\" type=\"checkbox\" value=\"rare\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>Fortune?</label>\n        <input id=\"fortune\" name=\"fortune\" type=\"checkbox\" value=\"fortune\"/>\n      </div>\n    </form>\n    `,\n      buttons: {\n        yes: {\n          icon: \"<i class='fas fa-check'></i>\",\n          label: `Start Crafting`,\n          callback: () => applyChanges = true\n        },\n        no: {\n          icon: \"<i class='fas fa-times'></i>\",\n          label: `Cancel`\n        },\n      },\n      default: \"yes\",\n      close: html => {\n        if (applyChanges) {\n          for (let token of canvas.tokens.controlled) {\n            var {\n              cra\n            } = actor.data.data.skills;\n            var charLevel = actor.data.data.details.level.value;\n            var charName = actor.data.name;\n            let itmType = html.find('[name=\"rare-item\"]')[0].checked ? \"rare\" : \"commun\";\n            let devinSight = html.find('[name=\"fortune\"]')[0].checked;\n            let itmLevel = parseInt(html.find('[name=\"lvl-item\"]')[0].value) || 0;\n            let itmValue = parseInt(html.find('[name=\"value-item\"]')[0].value) || 0;\n\n            if (itmLevel <= charLevel) {\n\n              if (itmLevel >= 0 && itmLevel <= 20) {\n                if (cra.rank >= 4) {\n                  return rollCrafting({\n                    itmLevel,\n                    cra,\n                    charLevel,\n                    itmType,\n                    itmValue,\n                    charName,\n                    devinSight\n                  });\n                } else if (cra.rank >= 3) {\n                  if (itmLevel < 16) {\n                    return rollCrafting({\n                      itmLevel,\n                      cra,\n                      charLevel,\n                      itmType,\n                      itmValue,\n                      charName,\n                      devinSight\n                    });\n                  } else {\n                    ui.notifications.warn(`That character doesn't have the appropriate proficiency for this item!`);\n                  }\n\n                } else if (cra.rank >= 1) {\n                  if (itmLevel < 9) {\n                    return rollCrafting({\n                      itmLevel,\n                      cra,\n                      charLevel,\n                      itmType,\n                      itmValue,\n                      charName,\n                      devinSight\n                    });\n                  } else {\n                    ui.notifications.warn(`That character doesn't have the appropriate proficiency for this item!`);\n                  }\n                } else {\n                  ui.notifications.warn(`That character isn't trained in Crafting!`);\n                }\n              } else ui.notifications.warn(`Invalid item level!`);\n            } else ui.notifications.warn(`That character doesn't have the appropriate level for this item!`);\n            return;\n          }\n        }\n      }\n    }).render(true);\n  } else if (actor.data.type !== 'character') ui.notifications.warn(`You must target a PC!`);\n} else;",
  "author": "E8D8BpwBYbRmlRfq",
  "img": "systems/pf2e/icons/equipment/adventuring-gear/hammer.jpg",
  "actorIds": [],
  "_id": "EwZzjGTlGKlzmDbe",
  "macro-marker": {
    "icon": "icons/svg/dice-target.svg",
    "tooltip": "New Macro",
    "colour": "#ff0000",
    "trigger": ""
  }
}