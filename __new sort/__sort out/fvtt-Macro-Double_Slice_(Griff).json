{
  "_id": "IYnzfXZATlK8HGyT",
  "name": "Double Slice (Griff)",
  "type": "script",
  "sort": 100001,
  "flags": {
    "furnace": {
      "runAsGM": false
    },
    "exportSource": {
      "world": "intotheabyss",
      "system": "pf2e",
      "coreVersion": "0.7.9",
      "systemVersion": "1.11.3.3582"
    },
    "macro-marker": {
      "activeData": {
        "icon": "icons/weapons/swords/swords-short.webp",
        "tooltip": "Double Slice",
        "colour": "#ff0000",
        "trigger": ""
      }
    }
  },
  "scope": "global",
  "command": "//Created by u/Griff4218\n//----------------Variable Declaration---------------------\nvar user = token;\nvar targetSelected = false;\nvar targetArray = Array.from(game.user.targets);\nvar target;\n\nvar map = 2\nvar attackMod1 = 0\nvar attackMod2 = 0;\nvar attack1Crit = false;\nvar attack1Hit = false\nvar attack2Crit = false;\nvar attack2Hit = false\nvar attack1CritMiss = false;\nvar attack2CritMiss = false;\nvar selectedWeapon1Action;\nvar selectedWeapon2Action;\nvar weapons = [];\n\nvar targetAC = 0;\n\n//-------------------execution-----------------------------\nif(!user){ //if no token is selected, show an error\n    ui.notifications.error(\"No token selected, please select the token that will use this ability\");\n}else{\n    //if no target selected show a info notification\n    if(targetArray[0]){\n        target = targetArray[0].actor.data;\n        targetSelected = true;\n    }else{\n        ui.notifications.info(\"Tip: You can target another creature to automatically compare your attacks to its AC\");\n    }\n\n    //check if the actor has any weapons that meet the requirements\n    weapons = GetEligableItems(user.actor.data.items);\n    if(weapons.length < 2 ){\n        ui.notifications.error(\"This actor is not holding enough weapons. Make sure to equip your weapons in your inventory\");\n        return 0;\n    }\n\n\tif(weapons[0]){\n\t\tif(CheckFeat()){\n           \n\t\t\tSelectWeapon();\n\t\t}\n\t}else{\n\t\tui.notifications.error(\"This actor has no weapons which meet the requirements for this ability\");\n\t}\n}\n\n//------------------Functions begin------------------------\nfunction toChat(content){\n    let chatData = {\n        user: game.user.id,\n        content,\n        speaker: ChatMessage.getSpeaker(),\n    }\n    ChatMessage.create(chatData, {})\n   \n    \n}\n\n//Determines if the Actor selected as the user has the requisite feat to use the ability, returns true if it does and false if it does not\nfunction CheckFeat() {\n\tlet items = user.actor.data.items;\n\tlet hasFeat = false;\n\n\tfor(let i = 0; i < items.length; i++){\n\t\tif(items[i].name === \"Double Slice\"){\n\t\t\t\thasFeat = true;\n\t\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tif(!hasFeat){\n\t\tui.notifications.error('This Creature does not have the Feat required to use this ability');\n\t\treturn false;\n\t}\n}\n\n//Creates and returns an array of all items that can be used for Double Slice (Equipped 1 handed weapons)\nfunction GetEligableItems(inv){\n\tlet EligableItems = [];\n\tlet f = 0;\n\t\n\tfor(let i = 0; i < inv.length; i++){\n\t\t\n\t\tif(inv[i].data.equipped && inv[i].data.equipped.value && inv[i].data.hands && (inv[i].data.hands.value === \"\" || inv[i].data.hands.value === \"1\")){\n\t\t\tEligableItems[f] = inv[i];\n\t\t\tf++;\n\t\t}\n\t}\n\t\n\treturn EligableItems;\n}\n\n//if the user has more than one elligable weapon, this funtion displays a dialoge to allow them to select which one to use\nfunction SelectWeapon(){\n    let options = '';\n    \n    //automatically propegates the selection menu for the dialouge with the available weapons\n    for(let i = 0; i < weapons.length; i++){\n        options += \"<option value='\" + i + \"'>\"+weapons[i].name+\"</option>\";\n    }\n    \n    //Dialouge control\n    let applyChanges = false;\n    new Dialog({\n        title: \"Weapon Selection\",\n        content: `\n            <div>Please select the order you want to use your weapons in<div>\n            <hr/>\n            <form>\n            <div class=\"form-group\">\n                <label for=\"List\">First Attack:</label>\n                <select id=\"Weapon-List1\" name=\"Weapon-List1\">\n                    `+options+`\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"List\">Second Attack:</label>\n                <select id=\"Weapon-List2\" name=\"Weapon-List2\">\n                    `+options+`\n                </select>\n            </div>\n            </form>\n            `,\n        buttons: {\n            yes: {\n                icon: \"<i class='fas fa-check'></i>\",\n                label: `Select Weapon`,\n                callback: () => applyChanges = true\n            },\n            no: {\n                icon: \"<i class='fas fa-times'></i>\",\n                label: `Cancel`\n            },\n        },\n        default: \"yes\",\n        close: html => {\n            if (applyChanges) {\n                let first = html.find('[name=\"Weapon-List1\"]')[0].value || 0;\n                let second = html.find('[name=\"Weapon-List2\"]')[0].value || 0;\n                prepareWeapons(weapons[first], weapons[second]);\n            }\n        }\n    }).render(true);\n    \n}\n\nfunction prepareWeapons(selectedWeapon1, selectedWeapon2){\n\n    //Double Slice only allows for 2 different weapons. If the same weapon is chosen for both attacks, show an error\n    if(selectedWeapon1._id === selectedWeapon2._id){\n        ui.notifications.error(\"You must use two different weapons for these strikes\");\n        return;\n    }\n\n    //Assign the actions for each of the weapons\n    user.actor.data.data.actions.forEach(element => {\n        if(element.item === selectedWeapon1._id){\n            selectedWeapon1Action = element;\n        }else if(element.item === selectedWeapon2._id){\n            selectedWeapon2Action = element;\n        }\n    });\n\n\n    //Determine if the second weapon has the Agile trait\n    selectedWeapon2.data.traits.value.forEach(element => {\n        if(element === \"agile\"){\n            map = 0;\n        }\n    });\n    \n    //Assign attack modifiers\n    attackMod1 = selectedWeapon1Action.totalModifier;\n    attackMod2 = selectedWeapon2Action.totalModifier;\n\n    //assign target ac\n    if(targetSelected){\n        targetAC = target.data.attributes.ac.value;\n    }\n\n    RollAttacks()\n\n}\n\nfunction handleCrits(roll){\n    if(roll === 1){\n        return -10;\n    }else if(roll === 20){\n        return 10;\n    }\n\n    return 0;\n} \n\nfunction RollAttacks(){\n    let message = '';\n    let name = user.actor.data.name;\n    \n\tconst roll1 = new Roll('d20').roll().total;\n\tconst roll2 = new Roll('d20').roll().total;\n\t\n\tconst crit1 = handleCrits(roll1)\n\tconst crit2 = handleCrits(roll2)\n    \n    //A lot of If statements to change messages displayed based on the results of each attack roll\n\tif(targetAC === 0){ //targetAC is set to 0 by default, if it stays 0 we assume that no target is selected and do not compare to any AC\n\t\tmessage = name + ' Rolls a ' + (roll1 + attackMod1);\n\t\t\tif(crit1 === 10){\n\t\t\t\tmessage += '[Natural 20]';\n\t\t\t}else if(crit1 === -10){\n\t\t\t\tmessage += '[Natural 1]';\n\t\t\t}else{\n\t\t\t\tmessage += \"[\" + roll1 + \"+\" + attackMod1 + \"]\";\n\t\t\t}\t\n\t\tmessage += ' on their first attack and a ' + (roll2 + attackMod2 - map);\n\t\t\tif(crit2 === 10){\n\t\t\t\tmessage += '[Natural 20]';\n\t\t\t}else if(crit2 === -10){\n\t\t\t\tmessage += '[Natural 1]';\n\t\t\t}else{\n\t\t\t\tmessage += \"[\" + roll2 + \"+\" + attackMod2 + \"-\" + map + \"]\";\n\t\t\t}\n        message += ' on their scond attack.';\n\n        toChat(message);\n\n        selectedWeapon1Action.damage();\n        selectedWeapon2Action.damage();\n\n\t}else{\n\t\tif(roll1 + crit1 + attackMod1 >= targetAC+10){//Different messages display on a Crit, Hit, and Miss for each attack, and the damage rolls are set accordingly\n\t\t\tmessage += (name + ' Crits on the First attack with a ' + (roll1 + attackMod1));\n            attack1Crit = true;\n\t\t}else if(roll1 + crit1 + attackMod1 >= targetAC){\n\t\t\tmessage += (name + ' Hits on the First attack with a ' + (roll1 + attackMod1));\n            attack1Hit = true;\n        }else if(roll1 + crit1 + attackMod1 <= targetAC-10){\n\t\t\tmessage += (name + ' Critically misses on the First attack with a ' + (roll1 + attackMod1));\n            attack1CritMiss = true;\n\t\t}else{\n\t\t\tmessage += (name + ' Misses the First attack with a ' + (roll1 + attackMod1));\n\t\t}\n\t\tif(crit1 === 10){\n\t\t\tmessage += '[Natural 20]';\n\t\t}else if(crit1 === -10){\n\t\t\tmessage += '[Natural 1]';\n\t\t}else{\n\t\t\tmessage += \"[\" + roll1 + \"+\" + attackMod1 + \"]\";\n\t\t}\t\n\t\t\n\t\tif(roll2 + crit2 + attackMod2 - map >= targetAC+10){\n\t\t\tmessage += (' and Crits on the Second attack with a ' + (roll2 + attackMod2 - map));\n\t\t\tattack2Crit = true\n\t\t\t\n\t\t}else if(roll2 + crit2 + attackMod2 - map >= targetAC){\n\t\t\tmessage += (' and Hits on the Second attack with a ' + (roll2 + attackMod2 - map));\n            attack2Hit = true;\n        }else if(roll2 + crit2 + attackMod2 - map <= targetAC-10){\n\t\t\tmessage += (name + ' Critically misses on the Second attack with a ' + (roll2 + attackMod2 - map));\n            attack2CritMiss = true;\n\t\t}else{\n\t\t\tmessage += (' and Misses the Second attack with a ' + (roll2 + attackMod2 - map));\n\n\t\t}\n\t\tif(crit2 === 10){\n\t\t\tmessage += '[Natural 20]';\n\t\t}else if(crit2 === -10){\n\t\t\tmessage += '[Natural 1]';\n\t\t}else{\n\t\t\tmessage += \"[\" + roll2 + \"+\" + attackMod2 + \"-\" + map + \"]\";\n        }\t\n\n        //display message and Rolls\n        toChat(message);\n        if(attack1Crit){\n            selectedWeapon1Action.critical();\n        }else if(attack1Hit){\n            selectedWeapon1Action.damage();\n        }\n\n        if(attack2Crit){\n            selectedWeapon2Action.critical();\n        }else if(attack2Hit){\n            selectedWeapon2Action.damage();\n        }\n\n        //if both attacks miss, go to dual onslaught\n        if(!attack1Crit && !attack1Hit && !attack2Crit && !attack2Hit){\n            dualOnslaught();\n        }\n\t}\n\t\n}\n\nfunction dualOnslaught(){\n    let items = user.actor.data.items;\n\tlet hasFeat = false;\n\n    //check if user has the Dual Onslaught feat\n\tfor(let i = 0; i < items.length; i++){\n\t\tif(items[i].name === \"Dual Onslaught\"){\n\t\t\t\thasFeat = true;\n\t\t\t\tbreak;\n\t\t}\n    }\n    \n    if(hasFeat){\n        let i = 0;\n        let options = \"\";\n\n        //A weapon cannot be used if its attack was a critical miss. Add attacks that missed, but not critically so, to the list of attacks to choose\n        if(!attack1CritMiss){\n            options += \"<option value='\" + \"first\" + \"'>\"+selectedWeapon1Action.name+\"</option>\";\n            i++;\n        }\n        if(!attack2CritMiss){\n            options += \"<option value='\" + \"second\" + \"'>\"+selectedWeapon2Action.name+\"</option>\";\n            i++;\n        }\n\n        if(i===0){\n            return;\n        }\n        \n        //Display a dialog for the user to pick the attack to apply the hit from\n        let applyChanges = false;\n        new Dialog({\n            title: \"Dual Onslaught\",\n            content: `\n                <div>You've missed both Attacks! Select one of them to apply the effects of. Attacks where you critically miss cannot be used.<div>\n                <hr/>\n                <form>\n                <div class=\"form-group\">\n                    <label for=\"List\">Weapon:</label>\n                    <select id=\"Weapon-List1\" name=\"Weapon-List1\">\n                        `+options+`\n                    </select>\n                </div>\n                </form>\n                `,\n            buttons: {\n                yes: {\n                    icon: \"<i class='fas fa-check'></i>\",\n                    label: `Select Weapon`,\n                    callback: () => applyChanges = true\n                },\n                no: {\n                    icon: \"<i class='fas fa-times'></i>\",\n                    label: `Cancel`\n                },\n            },\n            default: \"yes\",\n            close: html => {\n                if (applyChanges) {\n                    let choice = html.find('[name=\"Weapon-List1\"]')[0].value || 0;\n\n                    if(choice === \"first\"){\n                        selectedWeapon1Action.damage();\n                    }else{\n                        selectedWeapon2Action.damage();\n                    }\n                }\n            }\n        }).render(true);\n    }\n}",
  "author": "dHgy8aRsj2wdpwcd",
  "img": "icons/weapons/swords/swords-short.webp",
  "actorIds": [],
  "macro-marker": {
    "icon": "icons/weapons/swords/swords-short.webp",
    "tooltip": "Double Slice",
    "colour": "#ff0000",
    "trigger": ""
  }
}