{
  "_id": "vbfukx4kmnRigiTd",
  "name": "Spell Counteract Check",
  "type": "script",
  "sort": 100001,
  "flags": {
    "macro-marker": {
      "activeData": {
        "icon": "icons/svg/dice-target.svg",
        "tooltip": "Spell Counteract Check",
        "colour": "#ff0000",
        "trigger": ""
      }
    },
    "furnace": {
      "runAsGM": false
    },
    "exportSource": {
      "world": "intotheabyss",
      "system": "pf2e",
      "coreVersion": "0.7.9",
      "systemVersion": "1.11.3.3582"
    }
  },
  "scope": "global",
  "command": "/// creating counterspell levels\n\nlet optsLevels = [\n  // create object data for Set DC based on counterspell level\n  {level: -2, dc: 12, counterLevel: -2},\n  {level: -1, dc: 13, counterLevel: -1},\n  {level: 0, dc: 14, counterLevel: 0},\n  {level: 1, dc: 15, counterLevel: 1, spellLevel: 1},\n  {level: 2, dc: 16, counterLevel: 1},\n  {level: 3, dc: 18,counterLevel: 2, spellLevel: 2},\n  {level: 4, dc: 19,counterLevel: 2},\n  {level: 5, dc: 20,counterLevel: 3, spellLevel: 3},\n  {level: 6, dc: 22,counterLevel: 3},\n  {level: 7, dc: 23,counterLevel: 4, spellLevel: 4},\n  {level: 8, dc: 24,counterLevel: 4},\n  {level: 9, dc: 26,counterLevel: 5, spellLevel: 5},\n  {level: 10, dc: 27,counterLevel: 5},\n  {level: 11, dc: 28,counterLevel: 6,spellLevel: 6},\n  {level: 12, dc: 30,counterLevel: 6},\n  {level: 13, dc: 31,counterLevel: 7, spellLevel: 7},\n  {level: 14, dc: 32,counterLevel: 7},\n  {level: 15, dc: 34,counterLevel: 8, spellLevel: 8},\n  {level: 16, dc: 35,counterLevel: 8},\n  {level: 17, dc: 36,counterLevel: 9,spellLevel: 9},\n  {level: 18, dc: 38,counterLevel: 9},\n  {level: 19, dc: 39,counterLevel: 10,spellLevel: 10},\n  {level: 20, dc: 40,counterLevel: 10},\n  {level: 21, dc: 42,counterLevel: 11},\n  {level: 22, dc: 44,counterLevel: 11},\n  {level: 23, dc: 46,counterLevel: 12},\n  {level: 24, dc: 48,counterLevel: 12},\n  {level: 25, dc: 50,counterLevel: 13},\n];\n\n/// code to select a token\nlet selectedtokens = canvas.tokens.controlled;\n// new selection code as seen in Blackmarrows \nif (selectedtokens.length != 1) {\n ui.notifications.warn(\"You must select exactly 1 token.\");\n return;\n}\n\nlet pc;\n\nfor (let selectedtoken of selectedtokens) {\n if (selectedtoken.actor.data.type === \"character\" && pc === undefined) {\n  pc = selectedtoken.actor;\n }\n}\nif (pc === undefined) {\n ui.notifications.warn(\"You must select a player token.\"); // Changed \"target\" to \"select\"\n return;\n}\n\nlet applyChanges = false;\n\nnew Dialog({\n  title: `Counteract`,\n  content: `\n<style>\n      #pf2-template-creator header {\n        border-radius: 0;\n        background: linear-gradient(90deg, var(--secondary) 0%, #202b93 50%, var(--secondary) 100%);\n        border: none;\n        box-shadow: inset 0 0 0 1px #9f725b,inset 0 0 0 2px var(--tertiary),inset 0 0 0 3px #956d58;\n        margin-bottom: 2px;\n        font-size: .75rem;\n      }\n      #pf2-template-creator .window-content {\n        border-image: url(systems/pf2e/assets/sheet/corner-box.png) 9 repeat;\n      }\n      #pf2-template-creator form {\n        margin-bottom: 20px;\n\n      }\n      #pf2-template-creator .form-fields.buttons {\n        justify-content: flex-start !important;\n      }\n      #pf2-template-creator .button {\n        flex: 1 !important;\n        border-width: 9px;\n        border-image: url(systems/pf2e/assets/sheet/corner-box.png) 9 repeat;\n        font-size: 12px;\n        padding: 0;\n        background: #171f69;\n        color: #ffefbd;\n        cursor: pointer;\n      }\n      #pf2-template-creator .button:hover {\n        box-shadow: 0 0 8px white;\n      }\n      #pf2-template-creator .radios input[type=\"radio\"] {\n        opacity: 0;\n        position: fixed;\n        width: 0;\n      }\n      #pf2-template-creator .radios label {\n        cursor: pointer;\n        display: flex;\n        flex: 1 !important;\n        margin: -2px 0;\n        background: rgba(0, 0, 0, 0.1);\n        border: 2px groove #f0f0e0;\n        width: 100%;\n        border-radius: 3px;\n        font-size: 13px;\n        font-family: \"Signika\", sans-serif;\n        justify-content: center;\n        align-items: center;\n        background: #171f69;\n        color: #ffefbd;\n        border-width: 9px;\n        border-image: url(systems/pf2e/assets/sheet/corner-box.png) 9 repeat;\n      }\n      #pf2-template-creator .radios label i {\n        margin-right: 5px;\n        color: #ffefbd;\n        background: #171f69;\n      }\n      #pf2-template-creator .radios label:hover {\n        box-shadow: 0 0 8px white;\n      }\n      #pf2-template-creator .radios input[type=\"radio\"]:checked + label {\n        background: rgba(0, 0, 0, 0.2);\n      }\n      #pf2-template-creator .dialog-button {\n        height: 50px;\n        background: #171f69;\n        color: #ffffff;\n        justify-content: space-evenly;\n        align-items: center;\n        cursor: pointer;\n      }\n      #pf2-template-creator .notes {\n        color: #ffefbd !important;\n        flex: 0 0 100% !important;\n        font-size: 12px !important;\n        line-height: 16px !important;\n        margin: 10px 0 5px 0 !important;\n      }\n      #pf2-template-creator .notes.title {\n        border-bottom: 1px solid #f7d488;\n        font-size: 14px !important;\n        font-weight: bold;\n        margin: 20px 0 10px 0 !important;\n      }\n    </style>\n        <div>Select the spell level you are trying to counter.\n\n        </br></br> If the effect you intend to counter is not a spell then enter the level of the effect you are attempting to counteract.<div>\n        <hr/>\n\n\n        <form>          \n            <div class=\"form-group\">\n            <label>Modifier for Roll:</label>\n            <input id=\"modifier\" name=\"modifier\" type=\"number\"/>\n          </div>\n<hr>\n          <div class=\"form-group\">\n            <label>Attacker's Spell level:</label>\n            <select name=\"atkCounterLevel\" id=\"atkCounterLevel\">\n              <option value=0></option>\n              <option value=1>1st level Spell</option>\n              <option value=3>2nd level Spell</option>\n              <option value=5>3rd level Spell</option>\n              <option value=7>4th level Spell</option>\n              <option value=9>5th level Spell</option>\n              <option value=11>6th level Spell</option>\n              <option value=13>7th level Spell</option>\n              <option value=15>8th level Spell</option>\n              <option value=17>9th level Spell</option>\n              <option value=19>10th level Spell</option>\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label>Attacker's Effect Level:</label>\n            <input id=\"atkEffectLevel\" name=\"atkEffectLevel\" type=\"number\"/>\n          </div>\n\n<hr>\n          <div> The power of what is being countered\n            <div class=\"form-group\">\n            <label>Defender's DC:</label>\n            <input id=\"defenderDC\" name=\"defenderDC\" type=\"number\"/>\n          </div> \n           <hr>\n          <div class=\"form-group\">\n            <label>Defender's Spell level:</label>\n           <select name=\"defCounterLevel\" id=\"defCounterLevel\">\n              <option value=0></option>\n              <option value=1>1st level Spell</option>\n              <option value=3>2nd level Spell</option>\n              <option value=5>3rd level Spell</option>\n              <option value=7>4th level Spell</option>\n              <option value=9>5th level Spell</option>\n              <option value=11>6th level Spell</option>\n              <option value=13>7th level Spell</option>\n              <option value=15>8th level Spell</option>\n              <option value=17>9th level Spell</option>\n              <option value=19>10th level Spell</option>\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label>Defender's Effect Level:</label>\n            <input id=\"defEffectLevel\" name=\"defEffectLevel\" type=\"number\"/>\n          </div>\n        </form>\n<hr>\n        `,\n  buttons: {\n   yes: {\n    icon: \"<i class='fas fa-check'></i>\",\n    label: `Counteract`,\n    callback: () => applyChanges = true\n   },\n   no: {\n    icon: \"<i class='fas fa-times'></i>\",\n    label: `Cancel`\n   },\n  },\n  default: \"yes\",\n  close: html => {\n   if (applyChanges) {\n    /// obtain values from input\n\n    let atkLevel = Math.ceil((parseInt(html.find('[name=\"atkCounterLevel\"]')[0].value) || 0) / 2);\n    let atkEffectLevel = Math.ceil((parseInt(html.find('[name=\"atkEffectLevel\"]')[0].value) || 0) / 2);\n    let defLevel = Math.ceil((parseInt(html.find('[name=\"defCounterLevel\"]')[0].value) || 0) / 2);\n    let defEffectLevel = Math.ceil((parseInt(html.find('[name=\"defEffectLevel\"]')[0].value) || 0) / 2);\n    let counterModifier = parseInt(html.find('[name=\"modifier\"]')[0].value) || 0;\n    let defDC = parseInt(html.find('[name=\"defenderDC\"]')[0].value) || 0;\n\n    /// Calculate Counteract level\n    let finalAtkCounterLevel;\n    if (atkLevel > atkEffectLevel) {\n     finalAtkCounterLevel = atkLevel\n    } else {\n     finalAtkCounterLevel = atkEffectLevel\n    };\n\n\n\n    let finalDefCounterLevel;\n    if (defLevel > defEffectLevel) {\n     finalDefCounterLevel = defLevel\n    } else {\n     finalDefCounterLevel = defEffectLevel\n    };\n\n    /// search table for DC value and compare\n    let dcValue = optsLevels.find(x => x.level === defLevel).dc;\n    let dcValue2 = optsLevels.find(x => x.level === defEffectLevel).dc;\n\n    let finalDC;\n\n    if (defDC > 0) {\n     finalDC = defDC\n    } else if (dcValue > dcValue2) {\n     finalDC = dcValue\n    } else {\n    finalDC = dcValue2\n};\n\n    /// Dice rolling: Handle crits and dice rolls and create message.\n\n    const handleCrits = (roll) => roll === 1 ? -10 : (roll === 20 ? 10 : 0);\n\n    const roll = new Roll(`d20`).roll().total;\n    const crit = handleCrits(roll)\n\n    let message = `<b> Counteract Results</b><br> you rolled a [[${roll+counterModifier}]], `;\n    let message2;\n\n    if (roll + crit + counterModifier >= finalDC + 10) {\n     message2 = (`Critical Success!<br><hr><b>Critical Success</b> Counteract the target if its counteract level is no more than 3 levels higher than your effect’s counteract level.`);\n    } else if (roll + crit + counterModifier >= finalDC) {\n     message2 = (`Success! <br><hr><b>Success</b> Counteract the target if its counteract level is no more than 1 level higher than your effect’s counteract level.`);\n    } else if (roll + crit + counterModifier < finalDC - 10) {\n     message2 = (`Critical Failure! <br><hr><b>Critical Failure</b> You fail to counteract the target.`);\n    } else if (roll + crit + counterModifier < finalDC) {\n     message2 = (`Failure! <br><hr><b>Failure</b> Counteract the target if its counteract level is lower than your effect’s counteract level.`);\n    }\n\n    /// Create to chat information using function bound to toChat\n    let toChat = (content) => {\n     let chatData = {\n      user: game.user.id,\n      content,\n      speaker: ChatMessage.getSpeaker(),\n     }\n     ChatMessage.create(chatData, {})\n    }\n\n    toChat(`Attempting to counteract an effect!<br><br> <b>${token.name}</b> <br>Counteract level:<b> ${finalAtkCounterLevel}</b>.<br><br><b>Target Effect </b>(DC ${finalDC}) <br> Counteract level:<b> ${finalDefCounterLevel}.</b><br><br>${message}${message2}\n`)\n   }\n  }\n },\n\n {\n  id: 'pf2-template-creator'\n }).render(true);",
  "author": "E8D8BpwBYbRmlRfq",
  "img": "https://i.imgur.com/Bwlbcmh.png",
  "actorIds": [],
  "macro-marker": {
    "icon": "icons/svg/dice-target.svg",
    "tooltip": "Spell Counteract Check",
    "colour": "#ff0000",
    "trigger": ""
  }
}